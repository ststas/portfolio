name: Deploy ststas.dev

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run Lighthouse CI
        run: npm run lighthouse

  deploy:
    runs-on: ubuntu-latest
    needs: test # Deploy only after successful tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > aws_rsa.pem
          chmod 600 aws_rsa.pem
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Debug private key
        run: |
          cat aws_rsa.pem | head -n 5
          ls -l aws_rsa.pem

      - name: Check SSH connection
        run: |
          ssh -i aws_rsa.pem -v -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP
        env:
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP "mkdir -p /home/ubuntu/portfolio && chmod 777 /home/ubuntu/portfolio"

          rsync -avz --progress -e "ssh -i aws_rsa.pem -o StrictHostKeyChecking=no" ./ ubuntu@$AWS_LS_IP:/home/ubuntu/portfolio

          ssh -i aws_rsa.pem -o StrictHostKeyChecking=no ubuntu@$AWS_LS_IP << 'EOF'
            if [ ! -f /swapfile ]; then
              sudo fallocate -l 1G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
              echo "/swapfile none swap sw 0 0" | sudo tee -a /etc/fstab
            fi

            cd /home/ubuntu/portfolio

            # Install dependencies and build
            npm ci
            npm run lint
            npm run build

            # Install PM2 globally with sudo
            sudo npm install -g pm2

            # Stop and delete existing PM2 process
            pm2 delete portfolio || echo "No existing PM2 process"

            # Start the application with PM2 on port 3003
            PORT=3003 pm2 start npm --name "portfolio" -- start
            pm2 save

            # Wait for app to start
            echo "Waiting for app to start..."
            sleep 10

            # Check if app is ready by looking at logs
            if tail -n 20 /home/ubuntu/.pm2/logs/portfolio-out.log | grep -q "Ready in"; then
              echo "✅ Application is ready!"
            else
              echo "⚠️ Application might not be ready, but continuing..."
            fi

            # Final check
            curl -f http://localhost:3003 && echo "✅ App is running successfully on port 3003!" || echo "❌ App not responding"
            
            echo "🚀 Deployment completed successfully!"
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          AWS_LS_IP: ${{ secrets.AWS_LS_IP }}
