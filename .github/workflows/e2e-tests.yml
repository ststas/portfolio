name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run Playwright tests
        run: npm run test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.node-version }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test results (JSON)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: test-results/
          retention-days: 30

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &
        env:
          PORT: 3003

      - name: Wait for application
        run: npx wait-on http://localhost:3003

      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          npm install -g @lhci/cli@0.12.x
          # Запускаем Lighthouse CI и сохраняем вывод
          OUTPUT=$(lhci autorun 2>&1)
          echo "$OUTPUT"

          # Извлекаем URL отчета
          REPORT_URL=$(echo "$OUTPUT" | grep "View report at:" | cut -d' ' -f4 || echo "")
          if [ -n "$REPORT_URL" ]; then
            echo "report_url=$REPORT_URL" >> $GITHUB_OUTPUT
            echo "✅ Lighthouse report generated: $REPORT_URL"
          else
            echo "❌ Failed to extract Lighthouse report URL"
          fi
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request' && steps.lighthouse.outputs.report_url != ''
        uses: actions/github-script@v7
        with:
          script: |
            const reportUrl = '${{ steps.lighthouse.outputs.report_url }}';
            const comment = `## 🚀 Lighthouse Performance Report

            **Report URL:** ${reportUrl}

            ### 📊 Performance Metrics
            - Performance: Checked ✅
            - Accessibility: Checked ✅  
            - Best Practices: Checked ✅
            - SEO: Checked ✅

            [View detailed report](${reportUrl})

            ---
            *This report was automatically generated by Lighthouse CI*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
